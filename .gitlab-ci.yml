
.shared_windows_runners:
  tags:
  - shared-windows
  - windows
  - windows-1809

linux-tests:
  image: ubuntu:focal
  stage: test
  before_script:
    - apt-get -y update
    - DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get -y install python3-pip python3-venv fuse postgresql postgresql-contrib desktop-file-utils libgl1-mesa-glx xdg-utils libffi-dev
    - apt-get install -y python3-cairo-dev
    - /sbin/ldconfig
    - ln -s /usr/bin/python3 /usr/bin/python
    - service postgresql start
    - adduser --disabled-password --gecos "" testuser
    - chmod -R 777 ..
  script:
    - su testuser LinuxTest.sh

windows-tests:
  extends:
    - .shared_windows_runners
  stage: test
  before_script:
    - Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
    - choco install -y python --version=3.7.8
    - choco install -y winfsp --version=1.7.20172
    - mkdir winfsp-test
    - curl -o winfsp-tests-1.7.20172.zip https://github.com/billziss-gh/winfsp/releases/download/v1.7/winfsp-tests-1.7.20172.zip
    - Expand-Archive winfsp-tests-1.7.20172.zip -DestinationPath winfsp-test
    - RefreshEnv
    - python.exe -m pip install -r pre-requirements.txt
    - $env:PATH+=";$env:CI_PROJECT_DIR\winfsp-test"
      # build wheel
    - python.exe setup.py bdist_wheel
    - rm -R -Force parsec
      # Install the parsec wheel with all dependencies
    - $WHLfiles = Get-ChildItem "dist\parsec_cloud-*.whl" | ForEach-Object {$_.Name}
    - python.exe -m pip install "dist\$WHLfiles[all]"
      # Check dependency compatibility
    - python.exe -m pip check parsec[all]
      # Check winfsp-tests availability
    - python.exe -c "import winfspy.tests.winfsp_tests"
  script:
    - py.test --log-level=DEBUG --durations=10 -v tests -n auto --max-worker-restart=0 -x
    - py.test --log-level=DEBUG --durations=10 -v tests --runmountpoint --runslow -m mountpoint -x
    - py.test --log-level=DEBUG --durations=10 -v tests --runmountpoint --runslow --rungui -m gui -x
    - py.test --log-level=DEBUG --durations=10 -v tests --runslow -m slow -n auto --max-worker-restart=0 -x

pip-build:
  image: ubuntu:focal
  only:
    - tags
  stage: build
  before_script:
    - apt-get -y update
    # apt-get install -y xvfb xorg
    - DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get -y install python3-pip python3-venv fuse postgresql postgresql-contrib desktop-file-utils libgl1-mesa-glx xdg-utils libffi-dev
    - /sbin/ldconfig
    - ln -s /usr/bin/python3 /usr/bin/python
    - python -m venv venv_build
    - ./venv_build/bin/python -m pip install -r pre-requirements.txt
    - ./venv_build/bin/python setup.py bdist_wheel
    - pip3 install --user virtualenv
    - python -m venv venv_test
  script:
    - source venv_test/bin/activate
    - pip3 install -r pre-requirements.txt
    - pip3 install $(ls dist/parsec_cloud-*.whl)[all]
    - mkdir empty
    - cd empty
    - parsec --version
    # Run Parsec GUI in background and log it return code
    # xvfb-run parsec core gui --diagnose
    #echo "
    #  [pypi]
    #  username = __token__
    #  password = $PYPI_CREDENTIALS
    #  " > ~/.pypirc
    #  pip3 install twine
    #  twine upload dist/parsec_cloud-*.whl
    #env:
    #  PYPI_CREDENTIALS: $(PYPI_CREDENTIALS)
  artifacts:
    paths:
      - dist/parsec_cloud-*.whl

windows-build:
  extends:
    - .shared_windows_runners
  only:
    - tags
  stage: build
  before_script:
    - Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
    - choco install -y python --version=3.7.8
    - choco install -y nsis
    - cd packaging/win32/
    - curl -o winfsp-1.7.20172.msi https://github.com/billziss-gh/winfsp/releases/download/v1.7/winfsp-1.7.20172.msi
    - RefreshEnv
    - .\Invoke-Environment.ps1 '"C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\VC\Auxiliary\Build\vcvars64.bat"'
    - $env:PATH+=";C:\Program Files (x86)\NSIS"
  script:
    - python.exe freeze_parsec.py ..\\..
    - makensis.exe installer.nsi
  artifacts:
    paths:
      - packaging/win32/build/parsec*-setup.exe

